import { StandardTableView, VerticalBox ,Button, Palette, LineEdit, ScrollView, ComboBox} from "std-widgets.slint";
import { ChangeUserEquipament } from "./change_user_equipament.slint";
import { ComputerDetail,Computers,ChangeEquipament} from "../globals/computer.slint";



component ChangeComputer inherits VerticalBox {
    VerticalLayout {
        alignment: LayoutAlignment.space-between;
        HorizontalLayout {
            alignment: LayoutAlignment.space-around;
            Button {
                text: @tr("update");
                clicked => {
                    ComputerDetail.save()
                }
            }

            Button {
                text: @tr("change user");
                clicked => {
                    ChangeEquipament.change_equipament = true;
                }
            }

            HorizontalLayout {
                alignment: LayoutAlignment.end;
                Button {
                    text: @tr("back");
                    height: 50px;
                    clicked => {
                        Computers.selected_computer = false;
                    }
                }
            }
        }

        GridLayout {
            Text {
                text: "model";
            }

            LineEdit {
                text: ComputerDetail.model;
            }
        }

        StandardTableView {
            columns: [{ title:"name" }, { title:"login" }, { title:"email" }, { title:"initial date" }];
            rows: ComputerDetail.row_data;
        }
    }
}

component CreateComputer inherits VerticalBox {
    VerticalBox {
        Button {
            height: 50px;
            text: "save";
            clicked => {
                ComputerDetail.create_computer();
                Computers.create_computer = false;
            }
        }

        ScrollView {
            GridLayout {

                Text {
                    text: "serialnumber";
                    row: 0;
                }

                LineEdit {
                    edited(str) => {
                        ComputerDetail.serial_number = str
                    }
                    height: 50px;
                }

                Text {
                    text: "brand";
                    row: 1;
                }

                ComboBox {
                    model: ComputerDetail.brands;
                    selected(str) => {
                        ComputerDetail.brand= str;
                    }
                }

                Text {
                    text: "cpu";
                    row: 2;
                }

                ComboBox {
                    selected(str) => {
                        ComputerDetail.cpu = str
                    }
                    height: 50px;
                }

                Text {
                    text: "storage";
                    row: 3;
                }

                LineEdit {
                    edited(str) => {
                        ComputerDetail.storage = str
                    }
                    height: 50px;
                }

                Text {
                    text: "memory";
                    row: 4;
                }

                LineEdit {
                    edited(str) => {
                        ComputerDetail.memory = str
                    }
                    height: 50px;
                }

                // Text {
                //     text: "model";
                //     row: 5;
                // }

                // ComboBox {
                //     model: UserDetail.roles;
                //     selected(str) => {
                //         UserDetail.role = str
                //     }
                // }

                // Text {
                //     text: "type_equipament";
                //     row: 6;
                // }

                // ComboBox {
                //     model: UserDetail.roles;
                //     selected(str) => {
                //         UserDetail.role = str
                //     }
                // }
                // Text {
                //     text: "gpu";
                //     row: 7;
                // }

                // ComboBox {
                //     model: UserDetail.roles;
                //     selected(str) => {
                //         UserDetail.role = str
                //     }
                // }
                Text {
                    text: "observation";
                    row: 8;
                }

                LineEdit {
                    edited(str) => {
                        ComputerDetail.observation = str
                    }
                }
            }
        }
    }
}

component ShowComputers inherits VerticalBox {
    VerticalLayout {
        HorizontalLayout {
            Button {
                text: "create computer";
                clicked => {
                    Computers.create_computer = true;
                }
            }
        }

        StandardTableView {
            columns: [
                { title:"serialnumber" },
                { title: "brand" },
                { title:"actual user" },
                { title:"model" }
            ];
            rows: Computers.row_data;
            row-pointer-event(index, event, _) => {
                if event.button == PointerEventButton.left {
                    Computers.current_computer = Computers.row_data[index][0].text;
                    ComputerDetail.serial_number = Computers.row_data[index][0].text;
                    ComputerDetail.brand = Computers.row_data[index][1].text;
                    ComputerDetail.actual_user = Computers.row_data[index][2].text;
                    ComputerDetail.model = Computers.row_data[index][3].text;
                    Computers.selected_computer = true;
                }
            }
        }
    }
}

component Computer inherits VerticalBox {
    in-out property <string> serialnumber;
    if !ChangeEquipament.change_equipament:ChangeComputer { }
    if ChangeEquipament.change_equipament: ChangeUserEquipament { }
}

export component ComputerList inherits VerticalBox {
    if !Computers.selected_computer && !Computers.create_computer:ShowComputers { }
    if !Computers.selected_computer && Computers.create_computer: CreateComputer { }
    if Computers.selected_computer: Computer { }
}
